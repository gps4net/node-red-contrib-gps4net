[
    {
        "id": "ee9ead34d272aa8c",
        "type": "tab",
        "label": "G4N03RHT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a3944f71429bd3a3",
        "type": "junction",
        "z": "ee9ead34d272aa8c",
        "x": 440,
        "y": 520,
        "wires": [
            [
                "887b6149489c9e29"
            ]
        ]
    },
    {
        "id": "46825746e59290de",
        "type": "inject",
        "z": "ee9ead34d272aa8c",
        "name": "SLP",
        "props": [
            {
                "p": "payload.type",
                "v": "prog",
                "vt": "str"
            },
            {
                "p": "payload.action",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 330,
        "y": 540,
        "wires": [
            [
                "a3944f71429bd3a3"
            ]
        ]
    },
    {
        "id": "447c2e90dd1b835b",
        "type": "inject",
        "z": "ee9ead34d272aa8c",
        "name": "WKU",
        "props": [
            {
                "p": "payload.type",
                "v": "prog",
                "vt": "str"
            },
            {
                "p": "payload.action",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 330,
        "y": 500,
        "wires": [
            [
                "a3944f71429bd3a3"
            ]
        ]
    },
    {
        "id": "88936243e0b90e72",
        "type": "switch",
        "z": "ee9ead34d272aa8c",
        "name": "keepalive",
        "property": "payload.canid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "419414016",
                "vt": "num",
                "v2": "419414017",
                "v2t": "num"
            },
            {
                "t": "eq",
                "v": "419414256",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 760,
        "y": 420,
        "wires": [
            [],
            [
                "887b6149489c9e29"
            ]
        ]
    },
    {
        "id": "bfd0c8c55d6bf840",
        "type": "link out",
        "z": "ee9ead34d272aa8c",
        "name": "link out 1",
        "mode": "link",
        "links": [],
        "x": 1065,
        "y": 320,
        "wires": []
    },
    {
        "id": "f09335bcaa578cfe",
        "type": "link in",
        "z": "ee9ead34d272aa8c",
        "name": "link in 2",
        "links": [],
        "x": 345,
        "y": 320,
        "wires": [
            [
                "4132aeb1cf92dcf1"
            ]
        ]
    },
    {
        "id": "9412c8e7b6330c6a",
        "type": "link out",
        "z": "ee9ead34d272aa8c",
        "name": "link out 3",
        "mode": "link",
        "links": [],
        "x": 1065,
        "y": 520,
        "wires": []
    },
    {
        "id": "964cff39583ef8c4",
        "type": "comment",
        "z": "ee9ead34d272aa8c",
        "name": "Messages are translated into CAN frames and sent to the \\n  socket CAN or any other standard transport protocol \\n that connects to the CAN network.",
        "info": "",
        "x": 1330,
        "y": 540,
        "wires": []
    },
    {
        "id": "5db9d0dd29d83dd6",
        "type": "comment",
        "z": "ee9ead34d272aa8c",
        "name": "To dashboard or any other node that requires the full msg.payload",
        "info": "",
        "x": 1350,
        "y": 320,
        "wires": []
    },
    {
        "id": "9677ab423edeecbe",
        "type": "comment",
        "z": "ee9ead34d272aa8c",
        "name": "Rules can be added to the decode node \\n so that we can obtain a specific key-value directly, rather than using the dashboard. \\n For example, one could extract specific \\n values for temperature and PSN, and log them for further use.",
        "info": "Rules can be added to the decode node \\n so that we can obtain a specific key-value directly, rather than using the dashboard. \\n\nFor example, one could extract specific \\n values for temperature and PSN, and log them for further use.",
        "x": 950,
        "y": 200,
        "wires": []
    },
    {
        "id": "d31bf732dc1d137f",
        "type": "comment",
        "z": "ee9ead34d272aa8c",
        "name": "Enter programming mode",
        "info": "\n",
        "x": 130,
        "y": 500,
        "wires": []
    },
    {
        "id": "8d2db908a44d022b",
        "type": "comment",
        "z": "ee9ead34d272aa8c",
        "name": "Exit programming mode",
        "info": "\n",
        "x": 120,
        "y": 540,
        "wires": []
    },
    {
        "id": "beff7aa37887e6c9",
        "type": "comment",
        "z": "ee9ead34d272aa8c",
        "name": "CAN frames from the sensor network",
        "info": "",
        "x": 160,
        "y": 320,
        "wires": []
    },
    {
        "id": "a12f54a2f005a71d",
        "type": "link in",
        "z": "ee9ead34d272aa8c",
        "name": "link in 4",
        "links": [],
        "x": 495,
        "y": 640,
        "wires": [
            [
                "887b6149489c9e29"
            ]
        ]
    },
    {
        "id": "c34c88f2762459df",
        "type": "comment",
        "z": "ee9ead34d272aa8c",
        "name": "Messages from dashboard nodes or any other nodes are \\n encoded and transmitted to the CAN (Controller Area Network) \\n for communication and data exchange within the network.",
        "info": "",
        "x": 240,
        "y": 660,
        "wires": []
    },
    {
        "id": "0c28426f67c2294d",
        "type": "comment",
        "z": "ee9ead34d272aa8c",
        "name": "Replace the links with your own connections",
        "info": "",
        "x": 190,
        "y": 160,
        "wires": []
    },
    {
        "id": "4132aeb1cf92dcf1",
        "type": "g4nrht-decode",
        "z": "ee9ead34d272aa8c",
        "name": "g4nrht decode",
        "rules": [
            {
                "psn": "FFFFFFFF",
                "metric": "msg"
            }
        ],
        "outputs": 1,
        "x": 760,
        "y": 320,
        "wires": [
            [
                "88936243e0b90e72",
                "bfd0c8c55d6bf840"
            ]
        ]
    },
    {
        "id": "887b6149489c9e29",
        "type": "g4nrht-encode",
        "z": "ee9ead34d272aa8c",
        "name": "g4nrht encode",
        "x": 760,
        "y": 520,
        "wires": [
            [
                "9412c8e7b6330c6a"
            ]
        ]
    }
]